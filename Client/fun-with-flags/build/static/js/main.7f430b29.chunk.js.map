{"version":3,"sources":["components/HigherOrderComponents/MainAppWrapper/MainAppWrapper.module.css","components/AuthInput/authInput.module.css","components/AnswerCard/answerCard.module.css","pages/flagquiz/sections/GameSection/GameScreen/resultScreen.module.css","components/HigherOrderComponents/MainAppWrapper/MainAppWrapper.js","components/Navigation/Navigation.js","components/MobileNavigation/mobileNavigation.js","components/Backdrop/backdrop.js","components/FlagResult/flagresult.js","utils/axios.js","redux/actiontypes.js","redux/actions/flagpedia.js","pages/flagpedia/flagpedia.js","components/AuthInput/authInput.js","utils/countryNames.js","components/CountrySelect/countrySelect.js","utils/authFormValidator.js","redux/actions/auth.js","pages/auth/authPage.js","components/FlagQuizModals/flagQuizModal.js","redux/actions/flagquiz.js","components/AnswerCard/answerCard.js","pages/flagquiz/sections/GameSection/GameScreen/quizScreen.js","components/FlagQuizModals/congratulationModal.js","pages/flagquiz/sections/GameSection/GameScreen/resultScreen.js","pages/flagquiz/sections/GameSection/gameSection.js","pages/flagquiz/sections/HallOfFameSection/halloffame.js","pages/flagquiz/flagquiz.js","pages/settings/settingPage.js","pages/404Page/404Page.js","App.js","reportWebVitals.js","redux/reducers/flagpedia.js","redux/reducers/auth.js","utils/clearTimeoutAndInterval.js","redux/reducers/flagquiz.js","redux/store.js","index.js","components/Navigation/Navigation.module.css","pages/flagquiz/sections/HallOfFameSection/halloffame.module.css","pages/auth/authPage.module.css","components/MobileNavigation/mobileNavigation.module.css","pages/flagpedia/flagpedia.module.css","pages/flagquiz/sections/GameSection/GameScreen/quizScreen.module.css","pages/flagquiz/sections/GameSection/gameSection.module.css","pages/settings/settingPage.module.css"],"names":["module","exports","MainAppWrapper","className","styles","container","this","props","children","Component","navigation","mainNav","Navbar","bg","variant","Container","Brand","Nav","navButtons","navLink","to","exact","activeClassName","activeNavLink","isAuth","onClick","authHandler","mobileNavBtn","join","e","preventDefault","toggleMobileNav","icon","faAlignJustify","size","mobileNavigation","mobileNav","map","pathname","index","navName","activeNavBtn","isLogout","navBtn","show","backdrop","style","position","zIndex","height","width","background","onBackdropClick","flagresult","Card","margin","Img","src","flagUrl","borderBottom","Body","Title","name","Text","capital","console","log","process","defaultAxios","axios","create","baseURL","WAIT_FOR_FLAG_RESULT","HANDLE_FLAG_RESULT","HANDLE_FLAG_ERROR","AUTH_SUCCESS","AUTH_FAIL","AUTH_WAIT_FOR_RESULT","AUTH_LOGOUT","AUTH_SWITCH_TYPE","AUTH_UPDATE_USER_INFO","QUIZ_GOTO_START_SCREEN","QUIZ_FETCH_FAIL","QUIZ_ANSWER_CHOSEN","QUIZ_START_GAME","QUIZ_QUESTION_BEGIN","QUIZ_UPDATE_PROGRESS_BAR","QUIZ_WAIT_FOR_ASYNC_RESULT","QUIZ_SUBMIT_SCORE_SUCCESS","QUIZ_SUBMIT_SCORE_FAIL","QUIZ_CLOSE_CONGRATULATION_MODAL","QUIZ_FETCH_SCORE_RECORDS_SUCESS","QUIZ_FETCH_SCORE_RECORDS_FAIL","QUIZ_WAIT_FOR_SCORE_RECORDS_RESULT","getFlagResult","searchString","dispatch","waitForFlagResult","get","params","then","res","data","url","handleFlagResult","catch","err","response","message","handleFlagError","type","ACTION_TYPES","Flagpedia","state","inputChangeHandler","target","value","setState","prevState","onClickHandler","countryname","trim","usercountry","error","Col","lg","span","offset","md","sm","xs","errorCol","Form","color","errorMessage","greeting","username","Row","flagsForm","onSubmit","Group","Control","placeholder","onChange","Button","textAlign","loading","Spinner","animation","connect","flagpedia","auth","authInput","Label","label","onChangeHandler","isValid","invalid","currentValue","names","CountrySelect","countryNames","sort","priorCountry","filter","unshift","Select","validateInput","input","length","validateForm","formControl","key","undefined","touched","required","authFail","authSuccess","country","token","waitForAuthResult","authLogout","localStorage","removeItem","AuthPage","password","formIsValid","formIsTouched","event","inputType","updatedState","authType","authStart","history","push","readyToSubmit","hasValidationError","validationError","authErrorMessage","spinner","as","role","hasAuthError","authForm","inputName","charAt","toUpperCase","slice","changeHandler","errCol","btnCol","disabled","submitHandler","marginBottom","switchAuthType","hasError","loginBody","signupBody","body","post","setItem","Date","getTime","setTimeout","withRouter","FlagQuizModal","Modal","centered","Header","Footer","onOfferReject","onOfferAgree","waitForAsyncResult","fetchQuizzesSuccess","quizzes","startGame","answerChosen","TIME_OUT","setInterval","updateProgressBar","UPDATE_FREQUENCY","fetchQuizzesFail","result","questionBegin","submitScoreSuccess","submitScoreFail","startFetchScores","records","fetchScoresSuccess","fetchScoresFail","AnswerCard","answerIndex","rightAnswerIndex","scrollUpRef","current","scrollIntoView","behavior","answerCard","questionType","answer","flagquiz","currentQuizIndex","QuizScreen","quiz","answerArray","quizQuestion","quizNumber","question","questionUrl","questionImg","alt","ProgressBar","progressBar","now","progressBarPercentage","CongratulationModal","onCloseModal","ResultScreen","correctAnswer","correctAnswerString","border","maxWidth","nextButton","moveToNextQuestion","submitSpinner","submitButton","disabledBtn","submitScore","score","authToken","endGameButtons","startNewGame","scoreSubmitted","showModal","closeModal","maxScore","marginTop","lastResult","screenHasError","showCongratulation","headers","method","startSubmitScore","GameSection","quizScreen","resultScreen","alignWrapper","startScreenSpinner","startScreen","fetchQuizzes","gameSection","gameOn","gamePause","HallOfFame","socket","scoreRecords","io","on","updateScoreRecords","fetchScoreRecords","disconnect","recordSpinner","rec","decoration","record","nameSpan","recordDetail","scoreSpan","hallOfFame","recordsLoading","recordsHasError","recordsErrorMessage","FlagQuiz","createRef","redirectToAuthPage","ref","SettingPage","newPassword","updateFlag","updateUserInfo","newPasswordInput","passwordInput","confirmHandler","updateData","searchstring","errorPage","App","showMobileNav","tryAutoLogin","getItem","expiresIn","parseInt","remainTime","logout","login","Navigation","path","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","gameEnd","id","window","clearTimeout","clearAllTimeOuts","clearAllIntervals","nextQuizIndex","updatedProgressBar","closeCongratulationModal","gotoStartScreen","waitForScoreRecordsResult","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f430b29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainAppWrapper_container__A5QOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"invalid\":\"authInput_invalid__1aOfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerCard\":\"answerCard_answerCard__3adA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disabledBtn\":\"resultScreen_disabledBtn__1acpC\"};","import { Component } from \"react\";\nimport styles from \"./MainAppWrapper.module.css\";\n\nclass MainAppWrapper extends Component {\n\n    render() {\n        return (\n            <div className={styles.container}>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default MainAppWrapper;","import React from 'react';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAlignJustify } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './Navigation.module.css';\n\nconst navigation = (props) => {\n    const toggleMobileNav = (e) => {\n        e.preventDefault();\n        props.toggleMobileNav();\n    }\n\n    const onAuthClickHandler = () => {\n        if (props.isAuth) {\n            props.authHandler();\n        }\n    }\n\n    return (\n        <div className={styles.mainNav}>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand>FunWithFlags</Navbar.Brand>\n\n                    <Nav className={styles.navButtons}>\n                        <NavLink\n                            className={styles.navLink}\n                            to=\"/\"\n                            exact\n                            activeClassName={styles.activeNavLink}\n                        >\n                            Flagpedia\n                        </NavLink>\n\n                        <NavLink\n                            className={styles.navLink}\n                            to=\"/quiz\"\n                            activeClassName={styles.activeNavLink}\n                        >\n                            Flagquiz\n                        </NavLink>\n\n                        {props.isAuth ?\n                            <NavLink\n                                className={styles.navLink}\n                                to=\"/user-info\"\n                                activeClassName={styles.activeNavLink}\n                            >\n                                User Info\n                            </NavLink> : null\n                        }\n\n                        <NavLink\n                            className={styles.navLink}\n                            to=\"/auth\"\n                            activeClassName={styles.activeNavLink}\n                            onClick={() => onAuthClickHandler()}\n                        >\n                            {props.isAuth ? 'Log Out' : 'Log in'}\n                        </NavLink>\n\n                    </Nav>\n\n                    <NavLink\n                        className={[styles.navLink, styles.mobileNavBtn].join(' ')}\n                        activeClassName={styles.activeNavLink}\n                        to=\"\"\n                        onClick={(e) => toggleMobileNav(e)}\n                    >\n                        <FontAwesomeIcon icon={faAlignJustify} size=\"2x\" />\n                    </NavLink>\n\n                </Container>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default navigation;","import { NavLink } from 'react-router-dom';\nimport styles from './mobileNavigation.module.css';\n\nconst mobileNavigation = props => {\n    const onClickHandler = (isLogout) => {\n        props.toggleMobileNav();\n        if (isLogout) props.authHandler();\n    }\n\n    let mobileNav = (\n        <div className={styles.mobileNav}>\n            <h3>FunWithFlags</h3>\n            {\n                [\"/\", \"/quiz\", \"/user-info\",\"/auth\"].map((pathname, index) => {\n                    let navName = 'Flagpedia';\n                    switch (pathname) {\n                        case \"/quiz\": {\n                            navName = 'Flagquiz'\n                            break;\n                        }\n                        case \"/user-info\": {\n                            navName = 'User Info'\n                            break;\n                        }\n                        case \"/auth\": {\n                            navName = props.isAuth ? 'Log Out' : 'Log in'\n                            break;\n                        }\n                        default:\n                            break;\n                    }\n                    if (pathname === \"/user-info\" && !props.isAuth) return null;\n                    return (\n                        <NavLink\n                            to={pathname}\n                            exact\n                            activeClassName={styles.activeNavBtn}\n                            key={index}\n                            onClick={() => onClickHandler(props.isAuth && pathname === \"/auth\")}\n                        >\n                            <div className={styles.navBtn}>\n                                {navName}\n                            </div>\n                        </NavLink>\n                    )\n                })\n            }\n        </div>\n    )\n\n    return props.show ? mobileNav : null;\n\n}\n\nexport default mobileNavigation;\n\n","const backdrop = (props) => {\n    let backdrop = (\n        <div style={{\n            position: \"absolute\",\n            zIndex: \"1079\",\n            height: \"100%\",\n            width: \"100%\",\n            background: \"rgba(0,0,0,0.5)\"\n        }}\n            onClick={props.onBackdropClick}\n        >\n\n        </div>\n    )\n\n    return props.show ? backdrop : null;\n}\n\nexport default backdrop;","import { Card } from 'react-bootstrap';\n\nconst flagresult = (props) => {\n    return (\n        <div>\n            <Card style={{ margin: 'auto' }}>\n                <Card.Img variant=\"top\" src={props.flagUrl} style={{ borderBottom: 'solid 1px #d9d9d9' }}/>\n                <Card.Body>\n                    <Card.Title>{props.name}</Card.Title>\n                    <Card.Text>\n                        Capital: {props.capital}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default flagresult;\n\n//http://res.cloudinary.com/vcloudinary/image/upload/v1632743676/r5gojmtzwexubttcllqj.gif\n\n//https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Flag_of_Vietnam.svg/640px-Flag_of_Vietnam.svg.png","import axios from 'axios';\n\nconsole.log(process.env.NODE_ENV);\n\nconst defaultAxios = axios.create({\n    baseURL: process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : ''\n})\n\nexport default defaultAxios;","export const GET_FLAG_RESULT = \"GET_FLAG_RESULT\";\nexport const WAIT_FOR_FLAG_RESULT = \"WAIT_FOR_FLAG_RESULT\";\nexport const HANDLE_FLAG_RESULT = \"HANDLE_FLAG_RESULT\";\nexport const HANDLE_FLAG_ERROR = \"HANDLE_FLAG_ERROR\";\n\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_WAIT_FOR_RESULT = \"AUTH_WAIT_FOR_RESULT\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const AUTH_SWITCH_TYPE = \"AUTH_SWITCH_TYPE\";\nexport const AUTH_UPDATE_USER_INFO = \"AUTH_UPDATE_USER_INFO\";\n\nexport const QUIZ_GOTO_START_SCREEN = \"QUIZ_GOTO_START_SCREEN\";\nexport const QUIZ_FETCH = \"QUIZ_FETCH\";\nexport const QUIZ_FETCH_FAIL = \"QUIZ_FETCH_FAIL\";\nexport const QUIZ_ANSWER_CHOSEN = \"QUIZ_ANSWER_CHOSEN\";\nexport const QUIZ_MOVE_TO_NEXT_QUESTION = \"QUIZ_MOVE_TO_NEXT_QUESTION\";\nexport const QUIZ_START_GAME = \"QUIZ_START_GAME\";\nexport const QUIZ_QUESTION_BEGIN = \"QUIZ_QUESTION_BEGIN\";\nexport const QUIZ_UPDATE_PROGRESS_BAR = \"QUIZ_UPDATE_PROGRESS_BAR\";\nexport const QUIZ_WAIT_FOR_ASYNC_RESULT = \"QUIZ_WAIT_FOR_ASYNC_RESULT\";\nexport const QUIZ_SUBMIT_SCORE_SUCCESS = \"QUIZ_SUBMIT_SCORE_SUCCESS\";\nexport const QUIZ_SUBMIT_SCORE_FAIL = \"QUIZ_SUBMIT_SCORE_FAIL\";\nexport const QUIZ_CLOSE_CONGRATULATION_MODAL = \"QUIZ_CLOSE_CONGRATULATION_MODAL\";\nexport const QUIZ_FETCH_SCORE_RECORDS_SUCESS = \"QUIZ_FETCH_SCORE_RECORD_SUCESS\"; \nexport const QUIZ_FETCH_SCORE_RECORDS_FAIL = \"QUIZ_FETCH_SCORE_RECORD_FAIL\";\nexport const QUIZ_WAIT_FOR_SCORE_RECORDS_RESULT = \"QUIZ_WAIT_FOR_SCORE_RECORDS_RESULT\";","import axios from '../../utils/axios';\nimport * as ACTION_TYPES  from '../actiontypes';\n\nexport const getFlagResult = searchString => {\n    return (dispatch) => {\n        dispatch(waitForFlagResult());\n        axios.get('/api/countries/country', {\n            params: {\n                name: searchString\n            }\n        })\n        .then(res => {\n            //console.log(res);\n            const name = res.data.name;\n            const url = res.data.url;\n            const capital = res.data.capital;\n            dispatch(handleFlagResult(name, capital, url));\n        })\n        .catch(err => {\n            console.log(err.response);\n            let message = 'Unidentified Error!'\n            if (err.response) {\n                message = err.response.data.message\n            }\n            dispatch(handleFlagError(message));\n        })\n    }\n}\n\nexport const waitForFlagResult = () => {\n    return {\n        type: ACTION_TYPES.WAIT_FOR_FLAG_RESULT\n    }\n}\n\nexport const handleFlagResult = (name, capital, url) => {\n    return {\n        type: ACTION_TYPES.HANDLE_FLAG_RESULT,\n        name: name,\n        capital: capital,\n        url: url\n    }\n}\n\nexport const handleFlagError = (message) => {\n    return {\n        type: ACTION_TYPES.HANDLE_FLAG_ERROR,\n        message: message\n    }\n}","import { Component } from 'react';\nimport { Form, Button, Row, Col, Spinner } from 'react-bootstrap';\nimport styles from './flagpedia.module.css';\n\nimport Flagresult from '../../components/FlagResult/flagresult';\n\nimport { connect } from 'react-redux';\nimport { getFlagResult } from '../../redux/actions/flagpedia';\n\nclass Flagpedia extends Component {\n\n    state = {\n        searchString: ''\n    }\n\n    inputChangeHandler = e => {\n        const searchString = e.target.value;\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                searchString: searchString\n            }\n        })\n    }\n\n    onClickHandler = () => {\n        let countryname = this.state.searchString;\n        if (this.state.searchString.trim() === '') {\n            if(this.props.usercountry !== '') {\n                countryname = this.props.usercountry\n            } else {\n                return;\n            } \n        }\n        this.props.getFlagResult(countryname);\n    }\n\n    render() {\n        let flagresult = (\n            <Flagresult\n                name={this.props.name}\n                flagUrl={this.props.flagUrl}\n                capital={this.props.capital}\n            />\n        )\n\n        let error = (\n            <Col\n                lg={{ span: 4, offset: 4 }}\n                md={{ span: 6, offset: 3 }}\n                sm={{ span: 8, offset: 2 }}\n                xs={{ span: 8, offset: 2 }}\n                className={[\"mt-2\", styles.errorCol].join(\" \")}\n            >\n                <Form.Text style={{color: '#fff'}}>\n                    {this.props.errorMessage}\n                </Form.Text>\n            </Col>\n        )\n\n        return (\n            <div>\n                { this.props.isAuth ? <h1 className={styles.greeting}>Hello \"{this.props.username}\" from {this.props.usercountry} </h1> : null }\n                <Row>\n                    <Col\n                        lg={{ span: 4, offset: 4 }}\n                        md={{ span: 6, offset: 3 }}\n                        sm={{ span: 8, offset: 2 }}\n                        xs={{ span: 8, offset: 2 }}\n                    >\n                        <Form \n                            className={styles.flagsForm}\n                            onSubmit={(e) => e.preventDefault()}\n                        >\n                            <Form.Group className=\"mb-3\">\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Enter country name here\"\n                                    onChange={(e) => this.inputChangeHandler(e)}\n                                />\n                            </Form.Group>\n\n                            <Button \n                                variant=\"primary\" \n                                onClick={() => this.onClickHandler()}\n                            >\n                                Get the flag!\n                            </Button>\n                        </Form>\n                    </Col>\n\n                    {this.props.error ? error : null}\n\n                    <Col\n                        lg={{ span: 4, offset: 4 }}\n                        md={{ span: 6, offset: 3 }}\n                        sm={{ span: 8, offset: 2 }}\n                        xs={{ span: 8, offset: 2 }}\n                        className=\"mt-5\"\n                        style={{ textAlign: 'center' }}\n                    >\n                        {this.props.loading ? <Spinner animation=\"border\" variant=\"primary\" /> : flagresult}\n                    </Col>\n\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ...state.flagpedia,\n        isAuth: state.auth.isAuth,\n        username: state.auth.username,\n        usercountry: state.auth.usercountry\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getFlagResult: (searchString) => dispatch(getFlagResult(searchString))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Flagpedia);\n\n\n","import { Col, Form } from 'react-bootstrap';\nimport styles from './authInput.module.css';\n\nconst authInput = (props) => {\n    return (\n        <Col\n            lg={{ span: 10, offset: 1 }}\n            md={{ span: 10, offset: 1 }}\n            sm={{ span: 10, offset: 1 }}\n            xs={{ span: 10, offset: 1 }}\n        >\n            <Form.Group className=\"mb-3\">\n                <Form.Label>{ props.label }</Form.Label>\n                <Form.Control \n                    type={ props.type }\n                    onChange={ props.onChangeHandler } \n                    className={ props.isValid ? \"\" : styles.invalid }\n                    value= { props.currentValue }\n                />\n            </Form.Group>\n        </Col>\n    )\n}\n\nexport default authInput;","const names = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bhutan\", \"Bolivia\", \"Bosnia and Herzegovina\", \"Botswana\", \"Brazil\", \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burma\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Central African Republic\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Comoros\", \"Democratic Republic of the Congo\", \"Republic of the Congo\", \"Costa Rica\", \"Côte d'Ivoire\", \"Croatia\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"East Timor\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Fiji\", \"Finland\", \"France\", \"Gabon\", \"The Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Greece\", \"Grenada\", \"Guatemala\", \"Guinea\", \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"North Korea\", \"South Korea\", \"Kuwait\", \"Kyrgyzstan\", \"Laos\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Mauritania\", \"Mauritius\", \"Mexico\", \"Federated States of Micronesia\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Morocco\", \"Mozambique\", \"Namibia\", \"Nauru\", \"Nepal\", \"Netherlands\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\", \"Qatar\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Kitts And Nevis\", \"Saint Lucia\", \"Saint Vincent and the Grenadines\", \"Samoa\", \"San Marino\", \"São Tomé and Príncipe\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\", \"South Sudan\", \"Spain\", \"Sri Lanka\", \"Sudan\", \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Togo\", \"Tonga\", \"Trinidad and Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Venezuela\", \"Vietnam\", \"Yemen\", \"Zambia\", \"Zimbabwe\"]\nexport default names;","import { Col, Form } from 'react-bootstrap';\nimport countryNames from '../../utils/countryNames';\n\nconst CountrySelect = (props) => {\n    let names = countryNames.sort();\n    let priorCountry = props.priorCountry ? props.priorCountry : 'Vietnam'\n    names = names.filter(name => name !== priorCountry);\n    names.unshift(priorCountry);\n\n    return (\n        <Col\n            lg={{ span: 10, offset: 1 }}\n            md={{ span: 10, offset: 1 }}\n            sm={{ span: 10, offset: 1 }}\n            xs={{ span: 10, offset: 1 }}\n        >\n            <Form.Group className=\"mb-3\">\n                <Form.Label> Your Country </Form.Label>\n                <Form.Select onChange={props.onChangeHandler}>\n                    {\n                        names.map((name, index) => {\n                            return (\n                                <option \n                                    key={index} \n                                    value={name}\n                                >\n                                    {name}\n                                </option>)\n                        })\n                    }\n                </Form.Select>\n            </Form.Group>\n        </Col>\n    )\n}\n\nexport default CountrySelect;","export const validateInput = (input) => {\n    if (input.length >= 5) {\n        return true;\n    }\n    return false;\n}\n\nexport const validateForm = (formControl) => {\n    for (let key in formControl) {\n        let input = formControl[key];\n        if (input.touched !== undefined) {\n            if (!input.isValid && input.required) {\n                return false;\n            }\n\n            if (!input.isValid && !input.required && input.value.trim() !== '') {\n                return false;\n            }\n        }\n    }\n    return true;\n}","import * as ACTION_TYPES from '../actiontypes';\nimport {  handleFlagResult } from './flagpedia';\nimport axios from '../../utils/axios';\n\nexport const authStart = (authType, username, password, country) => {\n    return (dispatch) => {\n        dispatch(waitForAuthResult());\n        let url = `/api/auth/${authType}`;\n        let loginBody = {\n            username: username,\n            password: password\n        }\n\n        let signupBody = {\n            ...loginBody,\n            country: country\n        }\n\n        const body = authType === 'login' ? loginBody : signupBody\n\n        axios.post(url, body)\n            .then(res => {\n                //console.log(res);\n                let username = res.data.username;\n                let token = res.data.token;\n                let countryname = res.data.country.name;\n                let capital = res.data.country.capital;\n                let flagUrl = res.data.country.flagUrl;\n\n                localStorage.setItem('username', username);\n                localStorage.setItem('country', countryname);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expiresIn', `${new Date().getTime() + 3600*1000}`);\n\n                dispatch(handleFlagResult(countryname, capital, flagUrl));\n                dispatch(authSuccess(username, countryname, token));\n                setTimeout(() => dispatch(authLogout()), 3600*1000);\n            })\n            .catch(err => {\n                //console.log(err);\n                let message = 'Unidentified Error!';\n                if (err.response) {\n                    message = err.response.data.message;\n                }\n                dispatch(authFail(message));\n            })\n    }\n}\n\nexport const authFail = (message) => {\n    return {\n        type: ACTION_TYPES.AUTH_FAIL,\n        message: message\n    }\n}\n\nexport const authSuccess = (username, country, token) => {\n    return {\n        type: ACTION_TYPES.AUTH_SUCCESS,\n        username: username,\n        country: country,\n        token: token\n    }\n}\n\nexport const waitForAuthResult = () => {\n    return {\n        type: ACTION_TYPES.AUTH_WAIT_FOR_RESULT\n    }\n}\n\nexport const authLogout = () => {\n    localStorage.removeItem('username');\n    localStorage.removeItem('country');\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiresIn');\n\n    return {\n        type: ACTION_TYPES.AUTH_LOGOUT\n    }\n}\n\nexport const switchAuthType = () => {\n    return {\n        type: ACTION_TYPES.AUTH_SWITCH_TYPE\n    }\n}\n\nexport const updateUserInfo = (updateData) => {\n    return {\n        type: ACTION_TYPES.AUTH_UPDATE_USER_INFO,\n        updateData: updateData\n    }\n}","import { Component } from 'react';\nimport { Form, Button, Row, Col, Spinner } from 'react-bootstrap';\nimport AuthInput from '../../components/AuthInput/authInput';\nimport CountrySelect from '../../components/CountrySelect/countrySelect';\nimport styles from './authPage.module.css';\n\nimport { validateInput, validateForm } from '../../utils/authFormValidator';\nimport { authStart, switchAuthType } from '../../redux/actions/auth';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nclass AuthPage extends Component {\n\n    state = {\n        formControl: {\n            username: {\n                value: '',\n                required: true,\n                touched: false,\n                isValid: false\n            },\n            password: {\n                value: '',\n                required: true,\n                touched: false,\n                isValid: false\n            },\n            country: {\n                value: 'Vietnam'\n            }\n        },\n        formIsValid: false,\n        formIsTouched: false\n    }\n\n    changeHandler(event, type) {\n        let inputType = type;\n        let value = event.target.value;  \n\n        if (inputType === 'username' || inputType === 'password') {\n            this.setState(prevState => {\n                let updatedState = { ...prevState };\n                updatedState.formControl[inputType].value = value;\n                updatedState.formControl[inputType].touched = true;\n                updatedState.formControl[inputType].isValid = validateInput(value);\n                updatedState.formIsValid = validateForm(updatedState.formControl);\n                updatedState.formIsTouched = true;\n                return updatedState;\n            })\n        } else if (inputType === 'country') {\n            this.setState(prevState => {\n                let updatedState = { ...prevState };\n                updatedState.formControl.country.value = value;\n                updatedState.formIsTouched = true;\n                return updatedState;\n            })\n        }\n    }\n\n    submitHandler() {\n        const authType = this.props.authType;\n        const username = this.state.formControl.username.value;\n        const password = this.state.formControl.password.value;\n        const country = this.state.formControl.country.value;\n\n        this.props.authStart(authType, username, password, country);\n    }\n    \n    componentDidMount() {\n        if (this.props.isAuth) {\n            this.props.history.push('/');\n        }        \n    }\n\n    componentDidUpdate() {\n        if (this.props.isAuth) {\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        let readyToSubmit = this.state.formIsValid && this.state.formIsTouched;\n        let hasValidationError = !this.state.formIsValid && this.state.formIsTouched;\n        const validationError = <p style={{ color: 'red' }}>Username and Password must have at least 5 characters.</p>;\n        let authErrorMessage = <p style={{ color: 'red' }}>{this.props.authErrorMessage}</p>;\n        let spinner = <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n        />\n        let hasAuthError = this.props.hasAuthError;\n\n        return (\n            <div>\n                <h1 className={styles.greeting}>Sign in to have more fun with FunWithFlags</h1>\n\n                <Row>\n                    <Col\n                        lg={{ span: 4, offset: 4 }}\n                        md={{ span: 6, offset: 3 }}\n                        sm={{ span: 8, offset: 2 }}\n                        xs={{ span: 10, offset: 1 }}\n                    >\n\n                        <Form className={styles.authForm}>\n                            <Row>\n                                {\n                                    [\"username\", \"password\"].map((inputName, index) => (\n                                        <AuthInput\n                                            label={inputName.charAt(0).toUpperCase() + inputName.slice(1)}\n                                            type={inputName}\n                                            onChangeHandler={(e) => this.changeHandler(e, inputName)}\n                                            key={index}\n                                            isValid={\n                                                (this.state.formControl[inputName].isValid && this.state.formControl[inputName].touched) ||\n                                                (!this.state.formControl[inputName].touched)\n                                            }\n                                        />\n                                    ))\n                                }\n\n                                {this.props.authType === 'login' ? null : <CountrySelect onChangeHandler={(e) => this.changeHandler(e, \"country\")} />}\n\n\n                                <Col\n                                    lg={{ span: 10, offset: 1 }}\n                                    md={{ span: 10, offset: 1 }}\n                                    sm={{ span: 10, offset: 1 }}\n                                    xs={{ span: 10, offset: 1 }}\n                                    className={[styles.errCol, \"mt-2\", \"mb-2\"].join(\" \")}\n                                >\n                                    {hasValidationError ? validationError : null}\n                                    {hasAuthError ? authErrorMessage : null}\n                                </Col>\n\n                                <Col\n                                    lg={{ span: 10, offset: 1 }}\n                                    md={{ span: 10, offset: 1 }}\n                                    sm={{ span: 10, offset: 1 }}\n                                    xs={{ span: 10, offset: 1 }}\n                                    className={[styles.btnCol, \"mt-3\"].join(\" \")}\n                                >\n                                    <Button\n                                        variant=\"primary\"\n                                        disabled={!readyToSubmit || this.props.loading}\n                                        onClick={() => this.submitHandler()}\n                                        style={{ marginBottom: \"10px\" }}\n                                    >\n                                        {this.props.authType === 'login' ? 'Sign in' : 'Sign up'}\n                                        {this.props.loading ? ' ... ' : null }\n                                        {this.props.loading ? spinner : null }\n                                    </Button>\n\n                                    <Button\n                                        variant=\"primary\"\n                                        onClick={() => this.props.switchAuthType()}\n                                        style={{ marginBottom: \"10px\" }}\n                                    >\n                                        Switch to {this.props.authType === 'login' ? 'Sign up' : 'Sign in'}\n                                    </Button>\n\n                                </Col>\n\n                            </Row>\n                        </Form>\n\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        hasAuthError: state.auth.hasError,\n        authErrorMessage: state.auth.errorMessage,\n        isAuth: state.auth.isAuth,\n        loading: state.auth.loading,\n        authType: state.auth.authType\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        authStart: (authType, username, password, country) => dispatch(authStart(authType, username, password, country)),\n        switchAuthType: () => dispatch(switchAuthType())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AuthPage));\n\n","import { Modal, Button } from 'react-bootstrap';\n\nconst FlagQuizModal = props => {\n    return (\n        <Modal show={props.show} centered>\n            <Modal.Header>\n                <Modal.Title>Sign in to have more fun</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Sign in to have the chance to get your name in the Hall of Fame</Modal.Body>\n            <Modal.Footer>\n                <Button\n                    variant=\"secondary\"\n                    onClick={props.onOfferReject}\n                >\n                    Nah, just want to look around\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    onClick={props.onOfferAgree}\n                >\n                    Sign me in\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default FlagQuizModal;","import axios from '../../utils/axios';\nimport * as ACTION_TYPES from '../actiontypes';\n\nexport const TIME_OUT = 10;\nexport const UPDATE_FREQUENCY = 0.1;\n\nexport const waitForAsyncResult = () => {\n    return {\n        type: ACTION_TYPES.QUIZ_WAIT_FOR_ASYNC_RESULT\n    }\n}\n\nexport const fetchQuizzes = () => {\n    return (dispatch) => {\n        dispatch(waitForAsyncResult());\n        axios.get('/api/game/quizzes')\n            .then(res => {\n                //console.log(res);\n                let quizzes = res.data;\n                dispatch(fetchQuizzesSuccess(quizzes));\n            })\n            .catch(err => {\n                console.log(err.response);\n                let message = \"Unidentified Error!\"\n                if (err.response) {\n                    message = err.response.data.message;\n                }\n                dispatch(fetchQuizzesFail(message))\n            })\n    }\n}\n\nexport const fetchQuizzesSuccess = (quizzes) => {\n    return (dispatch) => {\n        dispatch(startGame(quizzes));\n        setTimeout(() => dispatch(answerChosen(false)), TIME_OUT * 1000);\n        setInterval(() => dispatch(updateProgressBar()), UPDATE_FREQUENCY * 1000);\n    }\n}\n\nexport const fetchQuizzesFail = (message) => {\n    return {\n        type: ACTION_TYPES.QUIZ_FETCH_FAIL,\n        message: message\n    }\n}\n\nexport const startGame = (quizzes) => {\n    return {\n        type: ACTION_TYPES.QUIZ_START_GAME,\n        quizzes: quizzes\n    }\n}\n\nexport const answerChosen = (result) => {\n    return {\n        type: ACTION_TYPES.QUIZ_ANSWER_CHOSEN,\n        result: result\n    }\n}\n\nexport const moveToNextQuestion = () => {\n    return (dispatch) => {\n        dispatch(questionBegin());\n        setTimeout(() => dispatch(answerChosen(false)), TIME_OUT * 1000);\n        setInterval(() => dispatch(updateProgressBar()), UPDATE_FREQUENCY * 1000);\n    }\n}\n\nexport const questionBegin = () => {\n    return {\n        type: ACTION_TYPES.QUIZ_QUESTION_BEGIN\n    }\n}\n\nexport const updateProgressBar = () => {\n    return {\n        type: ACTION_TYPES.QUIZ_UPDATE_PROGRESS_BAR\n    }\n}\n\nexport const gotoStartScreen = () => {\n    return {\n        type: ACTION_TYPES.QUIZ_GOTO_START_SCREEN\n    }\n}\n\nexport const startSubmitScore = (score, token) => {\n    return dispatch => {\n        dispatch(waitForAsyncResult());\n        axios({\n            url: '/api/game/scores',\n            headers: { 'Authorization': `Baerer ${token}` },\n            method: 'POST',\n            data: {\n                score: score\n            }\n        })\n            .then(res => {\n                //console.log(res);\n                dispatch(submitScoreSuccess());\n            })\n            .catch(err => {\n                console.log(err.response);\n                let message = \"Unidentified Error!\"\n                if (err.response) {\n                    message = err.response.data.message;\n                }\n                dispatch(submitScoreFail(message))\n            })\n    }\n}\n\nexport const submitScoreSuccess = () => {\n    return {\n        type: ACTION_TYPES.QUIZ_SUBMIT_SCORE_SUCCESS\n    }\n}\n\nexport const submitScoreFail = (message) => {\n    return {\n        type: ACTION_TYPES.QUIZ_SUBMIT_SCORE_FAIL,\n        message: message\n    }\n}\n\nexport const closeCongratulationModal = () => {\n    return {\n        type: ACTION_TYPES.QUIZ_CLOSE_CONGRATULATION_MODAL\n    }\n}\n\nexport const waitForScoreRecordsResult = () => {\n    return {\n        type: ACTION_TYPES.QUIZ_WAIT_FOR_SCORE_RECORDS_RESULT\n    }\n}\n\nexport const startFetchScores = () => {\n    return dispatch => {\n        dispatch(waitForScoreRecordsResult());\n        axios.get('/api/game/scores')\n            .then(res => {\n                let records = res.data;\n                dispatch(fetchScoresSuccess(records))\n            })\n            .catch(err => {\n                console.log(err.response);\n                let message = \"Unidentified Error!\"\n                if (err.response) {\n                    message = err.response.data.message;\n                }\n                dispatch(fetchScoresFail(message))           \n            })\n    }\n}\n\nexport const fetchScoresSuccess = (records) => {\n    return {\n        type: ACTION_TYPES.QUIZ_FETCH_SCORE_RECORDS_SUCESS,\n        records: records\n    }\n}\n\nexport const fetchScoresFail = (message) => {\n    return {\n        type: ACTION_TYPES.QUIZ_FETCH_SCORE_RECORDS_FAIL,\n        message: message\n    }\n}","import { Component } from \"react\";\nimport { Col, Card } from \"react-bootstrap\";\n\nimport { connect } from \"react-redux\";\nimport { answerChosen } from '../../redux/actions/flagquiz';\n\nimport styles from './answerCard.module.css';\n\nclass AnswerCard extends Component {\n\n    onClickHandler(answerIndex) {\n        let result = (answerIndex === this.props.rightAnswerIndex);\n        if (this.props.scrollUpRef) this.props.scrollUpRef.current.scrollIntoView({ behavior: 'smooth'});\n        this.props.answerChosen(result);\n    }\n\n    render() {\n\n        return (\n            <Col\n                lg={6}\n                md={6}\n                sm={12}\n                xs={12}\n            >\n\n                <Card \n                    className={styles.answerCard}\n                    onClick={() => this.onClickHandler(this.props.index)}\n                >\n                    {\n                        this.props.questionType === 'COUNTRY_TO_FLAG' ?\n                            <Card.Img src={this.props.answer}></Card.Img> :\n                            <Card.Body>\n                                <Card.Text>{this.props.answer}</Card.Text>\n                            </Card.Body>\n                    }\n\n                    <Card.Body>\n                        <Card.Title>{['A', 'B', 'C', 'D'][this.props.index]}</Card.Title>\n                    </Card.Body>\n                </Card>\n            </Col>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        rightAnswerIndex: state.flagquiz.quizzes[state.flagquiz.currentQuizIndex].rightAnswerIndex\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        answerChosen: (result) => dispatch(answerChosen(result))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnswerCard);\n","import { Component } from 'react';\nimport { Row, ProgressBar } from 'react-bootstrap';\nimport AnswerCard from '../../../../../components/AnswerCard/answerCard';\nimport styles from './quizScreen.module.css';\nimport { connect } from 'react-redux';\n\nclass QuizScreen extends Component {\n    render() {\n        let questionType = this.props.quiz.questionType;\n        let answerArray = this.props.quiz.answerArray;\n\n        return (\n            <div>\n                <h4 className={styles.quizQuestion}>Question {this.props.quizNumber}: {this.props.quiz.question}</h4>\n\n                {\n                    questionType === 'FLAG_TO_COUNTRY' ?\n                        <img\n                            src={this.props.quiz.questionUrl}\n                            className={styles.questionImg}\n                            alt=\"Error loading pic!\"\n                        >\n                        </img> : null\n                }\n\n                <ProgressBar\n                    className={styles.progressBar}\n                    now={this.props.progressBarPercentage}\n                />\n\n                <Row>\n                    {\n                        answerArray.map((answer, index) => {\n                            return (\n                                <AnswerCard\n                                    key={index}\n                                    index={index}\n                                    answer={answer}\n                                    questionType={questionType}\n                                    scrollUpRef={this.props.scrollUpRef}\n                                />\n                            )\n                        })\n                    }\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        quiz: state.flagquiz.quizzes[state.flagquiz.currentQuizIndex],\n        quizNumber: state.flagquiz.currentQuizIndex + 1,\n        progressBarPercentage: state.flagquiz.progressBar\n    }\n}\n\nexport default connect(mapStateToProps)(QuizScreen);","import { Modal, Button } from 'react-bootstrap';\n\nconst CongratulationModal = props => {\n    return (\n        <Modal centered show={props.show}>\n            <Modal.Header>\n                <Modal.Title>Congratulation!</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Your name is now amongst the best competitors 🔥🔥🔥</Modal.Body>\n            <Modal.Footer>\n                <Button\n                    variant=\"primary\"\n                    onClick={props.onCloseModal}\n                >\n                    Okay\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default CongratulationModal;","import { Component } from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport CongratulationModal from '../../../../../components/FlagQuizModals/congratulationModal';\n\nimport { connect } from 'react-redux';\nimport { moveToNextQuestion, gotoStartScreen, startSubmitScore, closeCongratulationModal } from '../../../../../redux/actions/flagquiz';\nimport styles from './resultScreen.module.css';\n\nclass ResultScreen extends Component {\n    render() {\n        let message = this.props.result ? \"🔥Congrats, you picked the right answer.🔥\" : \"🌧️ Good luck next time 🌧️, the correct answer is: \";\n        let finishMessage = \"🔥Congratulation, you finished the Flagquiz.🔥\";\n\n        let rightAnswerIndex = this.props.quiz.rightAnswerIndex;\n        let correctAnswerString = this.props.quiz.answerArray[rightAnswerIndex];\n        let correctAnswer;\n\n        if (this.props.quiz.questionType === 'COUNTRY_TO_FLAG') {\n            correctAnswer = (\n                <img\n                    src={correctAnswerString}\n                    alt={\"Loading pic failed!\"}\n                    style={{ border: \"1px solid #000\", margin: \"20px 0\", maxWidth: \"80%\" }}\n                ></img>\n            )\n        } else {\n            correctAnswer = <h1>{correctAnswerString}</h1>\n        }\n\n        let nextButton = (\n            <Button onClick={() => this.props.moveToNextQuestion()}>\n                Next question\n            </Button>\n        )\n\n        let submitSpinner = <Spinner\n            as=\"span\"\n            animation=\"grow\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n        />\n\n        let submitButton = (\n            <Button\n                disabled={!this.props.isAuth || this.props.loading}\n                className={this.props.isAuth ? \"\" : styles.disabledBtn}\n                onClick={() => this.props.submitScore(this.props.score, this.props.authToken)}\n                style={{marginBottom: \"10px\"}}\n            >\n                {this.props.loading ? \"Submitting ... \" : \"Submit your score!\"}\n                {this.props.loading ? submitSpinner: null}\n            </Button>\n        )\n\n        let endGameButtons = (\n            <div>\n                <Button\n                    variant=\"success\"\n                    onClick={() => this.props.startNewGame()}\n                    style={{marginBottom: \"10px\"}}\n                >\n                    New Game\n                </Button>\n                {this.props.scoreSubmitted ? null : submitButton}\n            </div>\n        )\n\n\n        return (\n            <div>\n                <CongratulationModal \n                    show={this.props.showModal}\n                    onCloseModal={() => this.props.closeModal()}\n                />\n                <h3>{message}</h3>\n                {this.props.result ? null : correctAnswer}\n                <h3\n                    style={{\n                        margin: \"50px 0\"\n                    }}\n                >\n                    You now have {this.props.score}/{this.props.maxScore} {this.props.score > 1 ? \"points\" : \"point\"}.\n                </h3>\n\n                {this.props.hasError ? <p style={{ color: \"red\", margin: \"10px 0\" }}>{this.props.errorMessage}</p> : null}\n                {this.props.currentQuizIndex + 1 !== this.props.maxScore ? nextButton : endGameButtons}\n                {this.props.currentQuizIndex + 1 === this.props.maxScore ? <h3 style={{ marginTop: \"20px\" }}>{finishMessage}</h3> : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        result: state.flagquiz.lastResult,\n        score: state.flagquiz.score,\n        maxScore: state.flagquiz.quizzes.length,\n        quiz: state.flagquiz.quizzes[state.flagquiz.currentQuizIndex],\n        currentQuizIndex: state.flagquiz.currentQuizIndex,\n        scoreSubmitted: state.flagquiz.scoreSubmitted,\n        hasError: state.flagquiz.screenHasError,\n        errorMessage: state.flagquiz.errorMessage,\n        showModal: state.flagquiz.showCongratulation,\n        loading: state.flagquiz.loading,\n        isAuth: state.auth.isAuth,\n        authToken: state.auth.token,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        moveToNextQuestion: () => dispatch(moveToNextQuestion()),\n        startNewGame: () => dispatch(gotoStartScreen()),\n        submitScore: (score, token) => dispatch(startSubmitScore(score, token)),\n        closeModal: () => dispatch(closeCongratulationModal())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultScreen);","import { Component } from 'react';\nimport { Col, Button, Spinner } from 'react-bootstrap';\nimport QuizScreen from './GameScreen/quizScreen';\nimport ResultScreen from './GameScreen/resultScreen';\n\nimport { connect } from 'react-redux';\nimport { fetchQuizzes } from '../../../../redux/actions/flagquiz';\n\nimport styles from './gameSection.module.css';\n\nclass GameSection extends Component {\n\n    render() {\n        let quizScreen = <QuizScreen scrollUpRef={this.props.scrollUpRef} />;\n        let resultScreen = <div className={styles.alignWrapper}><ResultScreen /></div>;\n\n        let startScreenSpinner = this.props.loading ?\n            <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n            /> : null;\n\n        let startScreen = (\n            <div className={styles.alignWrapper}>\n                <h1\n                    style={{\n                        marginBottom: \"50px\",\n                    }}\n                >\n                    Give Flagquiz a try? 🤔\n                </h1>\n                <Button onClick={() => this.props.fetchQuizzes()} disabled={this.props.loading}>\n                    {this.props.loading ? \"Fetching quizzes ... \" : \"Start Flagquiz!\"}\n                    {startScreenSpinner}\n                </Button>\n                {this.props.hasError ? <p style={{ color: \"red\", margin: \"10px 0\" }}>{this.props.errorMessage}</p> : null}\n            </div>\n        )\n\n        return (\n            <Col\n                lg={{ span: 7, offset: 1 }}\n                md={{ span: 7, offset: 1 }}\n                sm={{ span: 10, offset: 1 }}\n                xs={{ span: 10, offset: 1 }}\n                style={{ marginBottom: \"20px\"}}\n            >\n                <div className={styles.gameSection}>\n\n                    {!this.props.gameOn ? startScreen : null}\n                    {(this.props.gameOn && !this.props.gamePause) ? quizScreen : null}\n                    {(this.props.gameOn && this.props.gamePause) ? resultScreen : null}\n\n                </div>\n            </Col>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        gameOn: state.flagquiz.gameOn,\n        gamePause: state.flagquiz.gamePause,\n        loading: state.flagquiz.loading,\n        hasError: state.flagquiz.screenHasError,\n        errorMessage: state.flagquiz.errorMessage\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchQuizzes: () => dispatch(fetchQuizzes())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameSection);","import { Component } from \"react\";\nimport { Col, Spinner } from \"react-bootstrap\";\nimport io from 'socket.io-client';\nimport socketBaseURL from \"../../../../utils/socketBaseUrl\";\n\nimport { connect } from 'react-redux';\nimport { startFetchScores, fetchScoresSuccess } from '../../../../redux/actions/flagquiz';\n\nimport styles from './halloffame.module.css';\n\nclass HallOfFame extends Component {\n\n    constructor(props) {\n        super(props);\n        this.setState({\n            socket: null,\n            scoreRecords: []\n        })\n    }\n\n    componentDidMount() {\n        //console.log(`socketBaseURL: ${socketBaseURL}`);\n        const socket = socketBaseURL !== '' ? io(socketBaseURL) : io();\n        socket.on('halloffame', (records) => {\n            this.props.updateScoreRecords(records);\n        })\n        this.setState({ socket: socket });\n        this.props.fetchScoreRecords();\n    }\n\n    componentWillUnmount() {\n        if (this.state.socket) {\n            this.state.socket.disconnect();\n        }\n    }\n\n    render() {\n        let recordSpinner = <Spinner animation=\"border\" size=\"lg\" variant=\"primary\"></Spinner>\n\n        let records = this.props.records.map((rec, index) => {\n            let decoration = '';\n            switch (index) {\n                case 0: {\n                    decoration = '🔥👑🔥';\n                    break;\n                }\n                case 1: {\n                    decoration = '🔥🔥';\n                    break;\n                }\n                case 2: {\n                    decoration = '🔥';\n                    break;\n                }\n                default:\n                    break;\n            }\n            return (\n                <div \n                    key={index}\n                    className={styles.record}\n                >\n                    <span className={[styles.nameSpan, styles.recordDetail].join(' ')}>\n                        {index+1}.{decoration} <p>{rec.username}</p>\n                    </span>\n                    <span className={[styles.scoreSpan, styles.recordDetail].join(' ')}>\n                        <p>{rec.score}</p>\n                    </span>                \n                </div>\n            )\n        })\n\n        return (\n            <Col\n                lg={{ span: 3, offset: 0 }}\n                md={{ span: 3, offset: 0 }}\n                sm={{ span: 10, offset: 1 }}\n                xs={{ span: 10, offset: 1 }}\n            >\n                <div className={styles.hallOfFame}>\n                    <h3>Hall Of Fame</h3>\n                    { this.props.loading ? recordSpinner : records }\n                    { \n                        this.props.records.length === 0 && !this.props.hasError ? \n                            <h6>Seems like there is no one here yet. It's your chance to be the first one to set foot in the 🔥Hall of Fame🔥</h6> : \n                            null \n                    }\n                    { this.props.hasError ? <p style={{ color: \"red\" }}>{this.props.errorMessage}</p> : null }\n                </div>\n            </Col>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        records: state.flagquiz.records,\n        loading: state.flagquiz.recordsLoading,\n        hasError: state.flagquiz.recordsHasError,\n        errorMessage: state.flagquiz.recordsErrorMessage\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchScoreRecords: () => dispatch(startFetchScores()),\n        updateScoreRecords: (records) => dispatch(fetchScoresSuccess(records))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HallOfFame);","import { Component, createRef } from 'react';\nimport { Row } from 'react-bootstrap';\nimport FlagQuizModal from '../../components/FlagQuizModals/flagQuizModal';\nimport GameSection from './sections/GameSection/gameSection';\nimport HallOfFame from './sections/HallOfFameSection/halloffame';\n\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n//import styles from './flagquiz.module.css';\n\nclass FlagQuiz extends Component {\n    state = {\n        showModal: false\n    }\n\n    componentDidMount() {\n        if (!this.props.isAuth) {\n            this.setState({ showModal: true })\n        }\n        this.scrollUpRef = createRef();\n    }\n\n    componentDidUpdate() {\n        if (this.props.isAuth && this.state.showModal) {\n            this.setState({ showModal: false })\n        }\n    }\n\n    closeModal() {\n        this.setState({ showModal: false })\n    }\n\n    redirectToAuthPage() {\n        this.props.history.push('/auth');\n    }\n\n    render() {\n        return (\n            <div>\n                <FlagQuizModal\n                    show={this.state.showModal}\n                    onOfferAgree={() => this.redirectToAuthPage()}\n                    onOfferReject={() => this.closeModal()}\n                />\n\n                <Row>\n                    <div style={{ height: \"10px\" }} ref={this.scrollUpRef} ></div>\n                    <GameSection scrollUpRef={this.scrollUpRef} />\n                    <HallOfFame />\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(FlagQuiz));","import { Component } from 'react';\nimport { Form, Button, Row, Col, Spinner, Modal } from 'react-bootstrap';\nimport AuthInput from '../../components/AuthInput/authInput';\nimport CountrySelect from '../../components/CountrySelect/countrySelect';\nimport styles from './settingPage.module.css';\n\nimport { getFlagResult } from '../../redux/actions/flagpedia';\nimport { updateUserInfo } from '../../redux/actions/auth';\nimport { validateInput, validateForm } from '../../utils/authFormValidator';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios from '../../utils/axios';\n\nclass SettingPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            formControl: {\n                newPassword: {\n                    value: '',\n                    touched: false,\n                    isValid: false,\n                    required: false\n                },\n                password: {\n                    value: '',\n                    touched: false,\n                    isValid: false,\n                    required: true\n                },\n                country: {\n                    value: ''\n                }\n            },\n            formIsValid: false,\n            formIsTouched: false,\n            loading: false,\n            hasError: false,\n            errorMessage: '',\n            showModal: false\n        }\n    }\n\n    changeHandler(event, type) {\n        let inputType = type;\n        let value = event.target.value;\n\n        if(this.state.hasError) this.setState({ hasError: false });\n\n        if (inputType === 'newPassword' || inputType === 'password') {\n            this.setState(prevState => {\n                let updatedState = { ...prevState };\n                updatedState.formControl[inputType].value = value;\n                updatedState.formControl[inputType].touched = true;\n                updatedState.formControl[inputType].isValid = validateInput(value);\n                updatedState.formIsValid = validateForm(updatedState.formControl);\n                updatedState.formIsTouched = true;\n                return updatedState;\n            })\n        } else if (inputType === 'country') {\n            this.setState(prevState => {\n                let updatedState = { ...prevState };\n                updatedState.formControl.country.value = value;\n                updatedState.formIsTouched = true;\n                return updatedState;\n            })\n        }\n    }\n\n    submitHandler() {\n        this.setState({ hasError: false, loading: true })\n        const password = this.state.formControl.password.value;\n        const newPassword = this.state.formControl.newPassword.value;\n        const country = this.state.formControl.country.value;\n\n        const body = {\n            password: password.trim(),\n            newPassword: newPassword.trim(),\n            country: country\n        }\n\n        axios({\n            url: '/api/auth/update-user',\n            headers: { 'Authorization': `Baerer ${this.props.token}` },\n            method: 'POST',\n            data: body\n        })\n            .then(() => {\n                localStorage.setItem('country', country);\n                this.setState({ loading: false, showModal: true });\n                this.props.updateFlag(country);\n                this.props.updateUserInfo({ usercountry: country });\n            })\n            .catch(err => {\n                let message = 'Unidentified Error!';\n                if (err.response) {\n                    message = err.response.data.message;\n                }\n                this.setState({\n                    hasError: true,\n                    errorMessage: message,\n                    loading: false\n                })\n            })\n    }\n\n    confirmHandler() {\n        this.setState({showModal: false});\n        this.props.history.push('/');\n    }\n\n    componentDidMount() {\n        this.setState(prevState => {\n            let updatedState = { ...prevState }\n            updatedState.formControl.country.value = this.props.usercountry\n            return updatedState;\n        })\n\n        if (!this.props.isAuth) {\n            this.props.history.push('/auth')\n        }\n    }\n\n    componentDidUpdate(){\n        if (!this.props.isAuth) {\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n\n        let spinner = <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n        />\n\n        let newPasswordInput = this.state.formControl.newPassword;\n        let passwordInput = this.state.formControl.password;\n\n        return (\n            <div>\n                <Modal\n                    show={this.state.showModal}\n                    centered\n                >\n                    <Modal.Header>\n                        <Modal.Title>User Info</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        User info updated successfully!\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button \n                            variant=\"success\"\n                            onClick={() => this.confirmHandler()}\n                        >\n                            Okay\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                \n                <h1 className={styles.greeting}>Hi {this.props.username}, change your user information here.</h1>\n\n                <Row>\n                    <Col\n                        lg={{ span: 4, offset: 4 }}\n                        md={{ span: 6, offset: 3 }}\n                        sm={{ span: 8, offset: 2 }}\n                        xs={{ span: 10, offset: 1 }}\n                    >\n\n                        <Form className={styles.authForm}>\n                            <CountrySelect\n                                priorCountry={this.props.usercountry}\n                                onChangeHandler={(e) => this.changeHandler(e, 'country')}\n                            />\n\n                            <AuthInput\n                                label=\"New Password\"\n                                type=\"password\"\n                                isValid={\n                                    (newPasswordInput.touched && newPasswordInput.isValid) || !newPasswordInput.touched || newPasswordInput.value.trim() === ''\n                                }\n                                onChangeHandler={(e) => this.changeHandler(e, 'newPassword')}\n                                currentValue = { this.state.formControl.newPassword.value }\n                            />\n\n                            <AuthInput\n                                label=\"Current Password (required)\"\n                                type=\"password\"\n                                isValid={\n                                    (passwordInput.touched && passwordInput.isValid) || !passwordInput.touched\n                                }\n                                onChangeHandler={(e) => this.changeHandler(e, 'password')}\n                                currentValue = { this.state.formControl.password.value }\n                            />\n\n                            <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n                                {\n                                    (!this.state.formIsValid && passwordInput.touched) ?\n                                        <p style={{ color: \"red\" }}>Password must have at least 5 characters.</p> :\n                                        null\n                                }\n\n                                {\n                                    this.state.hasError ?\n                                        <p style={{ color: \"red\" }}>{this.state.errorMessage}</p> :\n                                        null\n                                }\n\n                                <Button\n                                    disabled={!this.state.formIsValid || this.state.loading }\n                                    onClick={() => this.submitHandler()}\n                                >\n                                    Change Info\n                                    {this.state.loading ? ' ... ' : ''}\n                                    {this.state.loading ? spinner : null}\n                                </Button>\n                            </div>\n\n                        </Form>\n\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        username: state.auth.username,\n        usercountry: state.auth.usercountry,\n        token: state.auth.token\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateUserInfo: (updateData) => dispatch(updateUserInfo(updateData)),\n        updateFlag: (searchstring) => dispatch(getFlagResult(searchstring))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SettingPage));","const errorPage = () => {\n    return (\n        <div>\n            <h1\n                style={{color: \"#fff\", textAlign: \"center\", marginTop: \"50px\"}}\n            >\n                404: Page not found\n            </h1>\n        </div>\n    )\n}\n\nexport default errorPage;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport MainAppWrapper from './components/HigherOrderComponents/MainAppWrapper/MainAppWrapper';\nimport Navigation from './components/Navigation/Navigation';\nimport MobileNavigation from './components/MobileNavigation/mobileNavigation';\nimport Backdrop from './components/Backdrop/backdrop';\nimport Flagpedia from './pages/flagpedia/flagpedia';\nimport AuthPage from './pages/auth/authPage';\nimport FlagQuiz from './pages/flagquiz/flagquiz';\nimport SettingPage from './pages/settings/settingPage';\nimport Page404 from './pages/404Page/404Page';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authLogout, authSuccess } from './redux/actions/auth';\nimport { getFlagResult } from './redux/actions/flagpedia';\n\nclass App extends Component {\n\n  state = {\n    showMobileNav: false\n  }\n\n  componentDidMount() {\n    this.tryAutoLogin();\n  }\n\n  tryAutoLogin() {\n    let token = localStorage.getItem('token');\n    let expiresIn = new Date(parseInt(localStorage.getItem('expiresIn'))).getTime();\n\n    let now = (new Date()).getTime();\n    if (token &&  now < expiresIn) {\n      console.log('Autologin!');\n      let remainTime = expiresIn - now;\n      console.log(`${remainTime} ms remain.`);\n      setTimeout(() => this.props.logout(), remainTime); \n      let username = localStorage.getItem('username');\n      let country = localStorage.getItem('country');\n      this.props.login(username, country, token);\n      this.props.getFlagResult(country);\n    }\n  }\n\n  toggleMobileNav() {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        showMobileNav: !prevState.showMobileNav\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Router>\n          <MobileNavigation\n            isAuth={this.props.isAuth}\n            show={this.state.showMobileNav}\n            authHandler={() => this.props.logout()}\n            toggleMobileNav={() => this.toggleMobileNav()}\n          />\n          <Backdrop\n            show={this.state.showMobileNav}\n            onBackdropClick={() => this.toggleMobileNav()}\n          />\n\n          <Navigation\n            isAuth={this.props.isAuth}\n            authHandler={() => this.props.logout()}\n            toggleMobileNav={() => this.toggleMobileNav()}\n          />\n\n          <MainAppWrapper>\n            <Switch>\n              \n              <Route path=\"/\" exact>\n                <Container fluid>\n                  <Flagpedia />\n                </Container>\n              </Route>\n              \n              <Route path=\"/quiz\" exact>\n                <Container fluid>\n                  <FlagQuiz scrollUpRef={this.scrollUpRef} />\n                </Container>\n              </Route>\n\n              <Route path=\"/user-info\" exact>\n                <Container fluid>\n                  <SettingPage />\n                </Container>\n              </Route>\n              \n              <Route path=\"/auth\" exact>\n                <Container fluid>\n                  <AuthPage />\n                </Container>\n              </Route>\n              \n              <Route path=\"/\">\n                <Container fluid>\n                  <Page404 />\n                </Container>\n              </Route>\n              \n            </Switch>\n          </MainAppWrapper>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(authLogout()),\n    login: (username, country, token) => dispatch(authSuccess(username, country, token)),\n    getFlagResult: (country) => dispatch(getFlagResult(country))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as ACTION_TYPES  from '../actiontypes';\n\nconst initialState = {\n    name: \"Vietnam\",\n    capital: \"Hanoi\",\n    flagUrl: \"http://res.cloudinary.com/vcloudinary/image/upload/v1632745330/m9qkepo2xbuhp5qi0bz1.gif\",\n    loading: false,\n    error: false,\n    errorMessage: \"\"\n}\n\nconst waitForFlagResult = (prevState) => {\n    return {\n        ...prevState,\n        loading: true,\n        error: false\n    }\n}\n\nconst handleFlagResult = (prevState, name, capital, url) => {\n    return {\n        ...prevState,\n        name: name,\n        capital: capital,\n        flagUrl: url,\n        loading: false\n    }\n}\n\nconst handleFlagError = (prevState, message) => {\n    return {\n        ...prevState,\n        loading: false,\n        error: true,\n        errorMessage: message\n    }\n}\n\nexport default function flagpediaReducer(state=initialState, action) {\n    switch (action.type) {\n        case ACTION_TYPES.WAIT_FOR_FLAG_RESULT: return waitForFlagResult(state);\n        case ACTION_TYPES.HANDLE_FLAG_RESULT: return handleFlagResult(state, action.name, action.capital, action.url);\n        case ACTION_TYPES.HANDLE_FLAG_ERROR: return handleFlagError(state, action.message);\n        default:\n            return state\n    }\n}","import * as ACTION_TYPES from '../actiontypes';\n\nconst initialState = {\n    isAuth: false,\n    username: '',\n    usercountry: '',\n    token: null,\n    hasError: false,\n    errorMessage: '',\n    loading: false,\n    authType: 'login'\n}\n\nconst waitForAuthResult = (prevState) => {\n    return {\n        ...prevState,\n        hasError: false,\n        loading: true\n    }\n}\n\nconst authFail = (prevState, message) => {\n    return {\n        ...prevState,\n        hasError: true,\n        loading: false,\n        errorMessage: message\n    }\n}\n\nconst authSuccess = (prevState, username, country, token) => {\n    return {\n        ...prevState,\n        isAuth: true,\n        username: username,\n        token: token,\n        usercountry: country\n    }\n}\n\nconst switchAuthType = (prevState) => {\n    return {\n        ...prevState,\n        authType: prevState.authType === 'login' ? 'signup' : 'login',\n        hasError: false\n    }\n}\n\nconst updateUserInfo = (prevState, updateData) => {\n    let updatedState = { ...prevState };\n    for (let key in updateData) {\n        updatedState[key] = updateData[key]\n    };\n    return updatedState;\n}\n\nexport default function authReducer(state = initialState, action) {\n    switch (action.type) {\n        case ACTION_TYPES.AUTH_WAIT_FOR_RESULT: return waitForAuthResult(state);\n        case ACTION_TYPES.AUTH_FAIL: return authFail(state, action.message);\n        case ACTION_TYPES.AUTH_SUCCESS: return authSuccess(state, action.username, action.country, action.token)\n        case ACTION_TYPES.AUTH_SWITCH_TYPE: return switchAuthType(state);\n        case ACTION_TYPES.AUTH_UPDATE_USER_INFO: return updateUserInfo(state, action.updateData);\n        case ACTION_TYPES.AUTH_LOGOUT: return initialState;\n        default:\n            return state;\n    }\n}","export const clearAllTimeOuts = () => {\n    let id = window.setTimeout(function() {}, 0);\n    while(id--) {\n        clearTimeout(id);\n    }\n}\n\nexport const clearAllIntervals = () => {\n    let id = window.setInterval(function() {}, 2);\n    while(id--) {\n        clearTimeout(id);\n    }\n}\n\n","import * as ACTION_TYPES  from '../actiontypes';\nimport { clearAllTimeOuts, clearAllIntervals } from '../../utils/clearTimeoutAndInterval';\n\nimport { TIME_OUT, UPDATE_FREQUENCY } from '../actions/flagquiz'; \n\nconst initialState = {\n    quizzes: [],\n    gameOn: false,\n    gamePause: false,\n    gameEnd: false,\n    lastResult: null,\n    currentQuizIndex: -1,\n    score: 0, \n    progressBar: 0,\n    loading: false,\n    screenHasError: false,\n    errorMessage: \"\",\n    scoreSubmitted: false,\n    showCongratulation: false,\n    records: [],\n    recordsLoading: false,\n    recordsHasError: false,\n    recordsErrorMessage: \"\"\n}\n\nconst waitForAsyncResult = (prevState) => {\n    return {\n        ...prevState,\n        loading: true\n    }\n}\n\nconst fetchQuizzesFail = (prevState, message) => {\n    return {\n        ...prevState,\n        loading: false,\n        screenHasError: true,\n        errorMessage: message\n    }\n}\n\nconst startGame = (prevState, quizzes) => {\n    return {\n        ...prevState,\n        quizzes: quizzes,\n        currentQuizIndex: 0,\n        gamePause: false,\n        gameOn: true,\n        score: 0,\n        progressBar: 0,\n        loading: false,\n        screenHasError: false,\n        errorMessage: \"\"\n    }\n}\n\nconst answerChosen = (prevState, result) => {\n    clearAllTimeOuts();\n    clearAllIntervals();\n    let score = result ? (prevState.score + 1) : prevState.score;\n    return {\n        ...prevState,\n        score: score,\n        gamePause: true,\n        lastResult: result,\n        progressBar: 0\n    }\n}\n\nconst questionBegin = (prevState) => {\n    let nextQuizIndex = prevState.currentQuizIndex + 1;\n    \n    return {\n        ...prevState,\n        gamePause: false,\n        currentQuizIndex: nextQuizIndex,\n        lastResult: null,\n        progressBar: 0\n    }\n}\n\nconst updateProgressBar = (prevState) => {\n    let updatedProgressBar = (((TIME_OUT*prevState.progressBar/100) + UPDATE_FREQUENCY)/TIME_OUT)*100 + 0.05;\n\n    return {\n        ...prevState,\n        progressBar: updatedProgressBar >= 100 ? 100 : updatedProgressBar\n    }\n}\n\nconst submitScoreSuccess = (prevState) => {\n    return {\n        ...prevState,\n        loading: false,\n        scoreSubmitted: true,\n        screenHasError: false,\n        showCongratulation: true\n    }\n}\n\nconst submitScoreFail = (prevState, message) => {\n    return {\n        ...prevState,\n        loading: false,\n        screenHasError: true,\n        errorMessage: message\n    }\n}\n\nconst closeCongratulationModal = (prevState) => {\n    return {\n        ...prevState,\n        showCongratulation: false\n    }\n}\n\nconst gotoStartScreen = (prevState) => {\n    return {\n        ...initialState,\n        records: prevState.records\n    }\n}\n\nconst waitForScoreRecordsResult = (prevState) => {\n    return {\n        ...prevState,\n        recordsLoading: true\n    }\n}\n\nconst fetchScoresSuccess = (prevState, records) => {\n    return {\n        ...prevState,\n        recordsHasError: false,\n        recordsLoading: false,\n        records: records\n    }  \n}\n\nconst fetchScoresFail = (prevState, message) => {\n    return {\n        ...prevState,\n        recordsErrorMessage: message,\n        recordsHasError: true,\n        recordsLoading: false\n    }\n}\n\nexport default function flagquizReducer(state=initialState, action) {\n    switch (action.type) {\n        case ACTION_TYPES.QUIZ_START_GAME: return startGame(state, action.quizzes);\n        case ACTION_TYPES.QUIZ_WAIT_FOR_ASYNC_RESULT: return waitForAsyncResult(state);\n        case ACTION_TYPES.QUIZ_FETCH_FAIL: return fetchQuizzesFail(state, action.message);\n        case ACTION_TYPES.QUIZ_ANSWER_CHOSEN: return answerChosen(state, action.result);\n        case ACTION_TYPES.QUIZ_QUESTION_BEGIN: return questionBegin(state);\n        case ACTION_TYPES.QUIZ_UPDATE_PROGRESS_BAR: return updateProgressBar(state);\n        case ACTION_TYPES.QUIZ_SUBMIT_SCORE_SUCCESS: return submitScoreSuccess(state);\n        case ACTION_TYPES.QUIZ_SUBMIT_SCORE_FAIL: return submitScoreFail(state, action.message);\n        case ACTION_TYPES.QUIZ_CLOSE_CONGRATULATION_MODAL: return closeCongratulationModal(state);\n        case ACTION_TYPES.QUIZ_WAIT_FOR_SCORE_RECORDS_RESULT: return waitForScoreRecordsResult(state);\n        case ACTION_TYPES.QUIZ_FETCH_SCORE_RECORDS_SUCESS: return fetchScoresSuccess(state, action.records);\n        case ACTION_TYPES.QUIZ_FETCH_SCORE_RECORDS_FAIL: return fetchScoresFail(state, action.message);\n        case ACTION_TYPES.QUIZ_GOTO_START_SCREEN: return gotoStartScreen(state);\n        default:\n            return state;\n    }\n}","import flagpediaReducer from './reducers/flagpedia';\nimport authReducer from './reducers/auth';\nimport flagquizReducer from './reducers/flagquiz';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n    flagpedia: flagpediaReducer,\n    auth: authReducer,\n    flagquiz: flagquizReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__2U8pw\",\"activeNavLink\":\"Navigation_activeNavLink__1M6Zj\",\"mobileNavBtn\":\"Navigation_mobileNavBtn__o-9zd\",\"navButtons\":\"Navigation_navButtons__1hh_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hallOfFame\":\"halloffame_hallOfFame__25Si-\",\"record\":\"halloffame_record__16tan\",\"recordDetail\":\"halloffame_recordDetail__2of9-\",\"nameSpan\":\"halloffame_nameSpan__3pAvA\",\"scoreSpan\":\"halloffame_scoreSpan__3b5me\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"authPage_greeting__yQnf4\",\"authForm\":\"authPage_authForm__2kKFI\",\"btnCol\":\"authPage_btnCol__3xAZu\",\"errCol\":\"authPage_errCol__akDlA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobileNav\":\"mobileNavigation_mobileNav__171XB\",\"navBtn\":\"mobileNavigation_navBtn__1SQtm\",\"activeNavBtn\":\"mobileNavigation_activeNavBtn__3Oogq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flagsForm\":\"flagpedia_flagsForm__9cDti\",\"errorCol\":\"flagpedia_errorCol__9XPP2\",\"greeting\":\"flagpedia_greeting__fdKlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quizQuestion\":\"quizScreen_quizQuestion__1UdCO\",\"questionImg\":\"quizScreen_questionImg__3H67f\",\"progressBar\":\"quizScreen_progressBar__2R5FX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameSection\":\"gameSection_gameSection__1yenm\",\"alignWrapper\":\"gameSection_alignWrapper__3bb7n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"settingPage_greeting__2bKL8\",\"authForm\":\"settingPage_authForm__2YhGc\"};"],"sourceRoot":""}